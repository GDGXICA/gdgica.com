---
import { Calendar, Clock, MapPin, Globe, Users, Ticket } from "@lucide/astro";
import Button from "./Button.astro";
import Tag from "./Tag.astro";

const {
  isHorizontal,
  name,
  image,
  shortDescription,
  date,
  time,
  location,
  isVirtual,
  participants,
  maxParticipants,
  category,
  status,
  isHighlight,
  tags,
  slug,
} = Astro.props;
---

{
  isHorizontal ? (
    <article class="border-gray-custom relative rounded-lg border shadow-sm md:flex">
      <div class="md:basis-1/2">
        <img
          src={image || "/placeholder.svg"}
          class="h- aspect-video h-full w-full rounded-t-lg object-cover md:rounded-none md:rounded-tl-lg md:rounded-bl-lg"
          width={385}
          height={192}
          alt={`Foto del evento de ${name}`}
        />
      </div>
      <div class="basis-1/2 bg-white">
        <div class="p-6">
          <div class="mb-4 flex items-center justify-between">
            <div class="flex items-center gap-2">
              <Tag label="DevFest" type="devfest" />
              <Tag label="PrÃ³ximo" type="upcoming" />
            </div>
            <Tag label="Destacado" type="devfest" isHighLight={isHighlight} />
          </div>
          <p class="text-primary mb-1 text-2xl font-bold">{name}</p>
          <p class="text-secondary mb-6">{shortDescription}</p>
          <ul class="text-secondary mb-4 flex flex-col gap-3">
            <li class="flex items-center gap-3">
              <Calendar stroke-width={1.5} size={16} color="#2463EB" />
              {date}
            </li>
            <li class="flex items-center gap-3">
              <Clock stroke-width={1.5} size={16} color="#EF4444" />
              {time}
            </li>
            <li class="flex items-center gap-3">
              <MapPin stroke-width={1.5} size={16} color="#16A34A" />
              {location.name}
            </li>
            {isVirtual && (
              <li class="flex items-center gap-3">
                <Globe stroke-width={1.5} size={16} color="#16A34A" />
                Virtual
              </li>
            )}

            <li class="flex items-center gap-3">
              <Users stroke-width={1.5} size={16} color="#EBB308" />
              {participants}/{maxParticipants} registrados
            </li>
          </ul>
          {tags.length > 0 && (
            <ul class="mb-4 flex flex-wrap gap-1">
              {tags.map((tag: string) => (
                <li>
                  <Tag label={tag} />
                </li>
              ))}
            </ul>
          )}

          <p class="grid">
            <Button variant="solid" href={`/eventos/${slug}`}>
              <Ticket stroke-width={1.5} />
              Ver Detalles
            </Button>
          </p>
        </div>
      </div>
    </article>
  ) : (
    <article class="border-gray-custom relative rounded-lg border shadow-sm">
      <img
        src={image ? image : "/placeholder.svg"}
        class="aspect-video h-[192px] w-full rounded-t-lg object-cover"
        width={385}
        height={192}
        alt={`Imagen del evento ${name}`}
      />
      <div class="absolute top-4 left-6 flex gap-2">
        {category && <Tag label={category.label} type={category.type} />}
        {status && <Tag label={status.label} type={status.type} />}
      </div>
      <div class="absolute top-4 right-6">
        {isHighlight && <Tag label="Destacado" isHighLight={true} />}
      </div>
      <div class="p-6">
        <p class="text-primary mb-1 text-2xl font-bold">{name}</p>
        <p class="text-secondary mb-6">{shortDescription}</p>
        <ul class="text-secondary mb-4 flex flex-col gap-3">
          <li class="flex items-center gap-3">
            <Calendar stroke-width={1.5} size={16} color="#2463EB" />
            {date}
          </li>
          <li class="flex items-center gap-3">
            <Clock stroke-width={1.5} size={16} color="#EF4444" />
            {time}
          </li>
          <li class="flex items-center gap-3">
            <MapPin stroke-width={1.5} size={16} color="#16A34A" />
            {location.name}
          </li>
          {isVirtual && (
            <li class="flex items-center gap-3">
              <Globe stroke-width={1.5} size={16} color="#16A34A" />
              Virtual
            </li>
          )}

          <li class="flex items-center gap-3">
            <Users stroke-width={1.5} size={16} color="#EBB308" />
            {participants}/{maxParticipants} registrados
          </li>
        </ul>
        {tags.length > 0 && (
          <ul class="mb-4 flex flex-wrap gap-1">
            {tags.map((tag: string) => (
              <li>
                <Tag label={tag} />
              </li>
            ))}
          </ul>
        )}

        <p class="grid">
          <Button variant="solid" href={`/eventos/${slug}`}>
            <Ticket stroke-width={1.5} />
            Ver Detalles
          </Button>
        </p>
      </div>
    </article>
  )
}
